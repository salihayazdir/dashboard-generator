generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
  dashboards Dashboard[]
  dataSources DataSource[]
}

model Dashboard {
  id        Int       @id @default(autoincrement())
  name      String  @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   Int
  elements  DashboardElement[]
  dataSource DataSource  @relation(fields: [dataSourceId], references: [id], onDelete: Cascade)
  dataSourceId Int
}

model DashboardElement {
  id          Int       @id @default(autoincrement())
  name        String
  type        String
  query      String
  fields     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  dashboard   Dashboard @relation(fields: [dashboardId], references: [id])
  dashboardId Int
}

model DataSource {
  id        Int       @id @default(autoincrement())
  name      String  @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  connectionString String
  schema String?
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   Int
  dashboards Dashboard[]
}